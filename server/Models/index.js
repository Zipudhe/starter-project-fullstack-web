// FILE AUTO GENERATED BY SEQUELIZE-CLI
// TO IMPORT A MODEL, DO AS THE EXAMPLE BELOW:
// 
// import { Dragon } from "Models"
// 
// 

import fs from 'fs'
import path from 'path'
import Sequelize from 'sequelize'
import config from 'Database/config.js'

// db connection variable
const sequelize = config.use_env_variable
  ? new Sequelize(process.env[config.use_env_variable], config)
  : new Sequelize(config.database, config.username, config.password, config)

// function to get all of the model file names
const readDir = (directory = __dirname) => new Promise((resolve, reject) => {
  fs.readdir(directory, (err, fileNames) => {
    if (err) reject(err)
    else resolve(fileNames)
  })
})

// aux variable to hold sequelize, db connection instance and models
const db = {
  sequelize,
  Sequelize,
}

// read all models, initialize them and export them
const basename = path.basename(__filename)
readDir()
  .then(fileNames => fileNames
    .filter(file => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js')
    .map(file => import(path.join(__dirname, file)))
  )
  .then(modulePromises => Promise.all(modulePromises))
  .then(modules => modules
    // initialize models
    .map(module => {
      const model = module.default
      model.init(sequelize, Sequelize.DataTypes)
      db[model.name] = model
      return model
    })
    // associate models
    .map(model => model?.associate(db))
  )
  .catch(err => console.log("ERROR in loading sequelize models:", err))
