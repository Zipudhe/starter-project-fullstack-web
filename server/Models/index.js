// FILE AUTO GENERATED BY SEQUELIZE-CLI
// TO IMPORT A MODEL, DO AS THE EXAMPLE BELOW:
// 
// import { Dragon } from "Models"
// 
// 

import fs from 'fs'
import path from 'path'
import Sequelize from 'sequelize'
import config from 'Database/config.js'

const sequelize = config.use_env_variable
  ? new Sequelize(process.env[config.use_env_variable], config)
  : new Sequelize(config.database, config.username, config.password, config)

// function to get all of the model file names
const readDir = (directory = __dirname) => new Promise((resolve, reject) => {
  fs.readdir(directory, (err, fileNames) => {
    if (err) reject(err)
    else resolve(fileNames)
  })
})

// read modules and sync models with db
const basename = path.basename(__filename)
const db = {}

// read all models, initialize them and export them
readDir()
  .then(fileNames => fileNames
    .filter(file => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js')
    .map(file => import(path.join(__dirname, file)))
  )
  .then(modulePromises => Promise.all(modulePromises))
  .then(modules => modules
    .map(module => module.default)
    .map(modelFactory => modelFactory(sequelize, Sequelize.DataTypes))
    .map(model => db[model.name] = model)
  )
  .catch(err => console.log("ERROR in loading sequelize models:", err))

// associate models
Object
  .keys(db)
  .map(modelName => db[modelName]?.associate(db))

db.sequelize = sequelize
db.Sequelize = Sequelize

module.exports = db
