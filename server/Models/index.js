// FILE AUTO GENERATED BY SEQUELIZE-CLI
// TO IMPORT A MODEL, DO AS THE EXAMPLE BELOW:
// 
// import { Dragon } from "Models"
// 
// 

'use strict'

const fs = require('fs')
const path = require('path')
const Sequelize = require('sequelize')
const basename = path.basename(__filename)
const env = process.env.NODE_ENV || 'development'
const config = require(__dirname + '/../Database/config.js')[env]
const db = {}

const sequelize = config.use_env_variable
  ? new Sequelize(process.env[config.use_env_variable], config)
  : new Sequelize(config.database, config.username, config.password, config)


// function to get all of the model file names
const readDir = (directory = __dirname) => new Promise((resolve, reject) => {
  fs.readdir(directory, (err, fileNames) => {
    if (err) reject(err)
    else resolve(fileNames)
  })
})

// read modules and sync models with db
readDir()
  .then(fileNames => fileNames
    .filter(file => 
      (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js')
    )
    .map(file => {
      console.log("model filenames", file)
      import(path.join(__dirname, file))
        .then(module => {
          const modelFactory = module.default
          const model = modelFactory(sequelize, Sequelize.DataTypes)
          db[model.name] = model
        })
    })
  )
  .catch(err => console.log("ERROR in loading sequelize models:", err))

// associate models
Object
  .keys(db)
  .map(modelName => db[modelName]?.associate(db))

db.sequelize = sequelize
db.Sequelize = Sequelize

module.exports = db
